<?php

/*
 * 系统32位
 * 二进制 源码，反码，补码（反码+1）
 * 负数时以二进制正数的补码表示
 * 二进制11 --         00000000 00000000 00000000 00001011
 * 二进制11的反码--    11111111 11111111 11111111 11110100
 * 二进制-11--         11111111 11111111 11111111 11110101
 * 二进制1--           00000000 00000000 00000000 00000001
 *0x7fffffff           01111111 11111111 11111111 11111111
 *
 * 任何数和1与得到的结果为1或0
 *
 * 一个二进制整数与它减去1的结果做一次与运算，相当于是把最右边的1变为0
 */
function numberOfOne($num){
    $count=0;
    //还要考虑为负整数的情况
    if($num < 0){
        //把二进制负数最高位变成0，转化成正数 之前用错了0xffffffff
        $num = $num & 0x7fffffff;
        $count++;
    }
    while ($num!==0){
        $num=$num&($num-1);
        $count++;
    }
    return $count;
}
$num=-11;
var_dump(numberOfOne($num));
